version: '3.7'

services:
  backend:
    container_name: store_backend
    depends_on:
      - db
    build:
      context: .
      target: production
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - DATABASE_URL=mongodb://db_mongo:27017/store_backend
    command: yarn start:prod
    networks:
      - webnet
  db:
    image: mongo
    container_name: db_mongo
    volumes:
      - mongodata:/data/db
    networks:
      - webnet

  frontend:
    # image: arielgordon/store_frontend
    build:
      context: ../store_frontend/.
    container_name: store_frontend
    depends_on:
      - backend
    environment:
      - BASE_URL="http://backend:3000/"
      - BROWSER_BASE_URL="http://frontend/"
    networks:
      - webnet

  nginx:
    image: "nginx"
    depends_on:
      - frontend
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/error_log.log:/etc/nginx/error_log.log
      - ./nginx/nginx_access.log:/etc/nginx/nginx_access.log
      - ./nginx/cache/:/etc/nginx/cache
      # - /etc/letsencrypt/:/etc/letsencrypt/
    ports:
      - 80:80
      # - 443:443
    networks:
      - webnet
networks:
  webnet:

volumes:
  mongodata: 
  # prod:
  #   container_name: hospital_prod
  #   image: hospital-prod:1.0.0
  #   depends_on:
  #     - db
  #   build:
  #       context: .
  #       target: production
  #       dockerfile: ./Dockerfile
  #   command: npm run start:prod
  #   ports:
  #       - 3000:3000
  #       - 9229:9229
  #   networks:
  #       - webnet
  #   volumes:
  #       - .:/usr/src/app
  #       - /usr/src/app/node_modules
  #   restart: unless-stopped
